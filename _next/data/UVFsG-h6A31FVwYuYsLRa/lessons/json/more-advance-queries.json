{"pageProps":{"post":{"attributes":{},"html":"<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- this is counting the most favorited bands</span>\n<span class=\"hljs-keyword\">SELECT</span>\n  <span class=\"hljs-built_in\">COUNT</span>(f.value) <span class=\"hljs-keyword\">AS</span> count, f.value\n<span class=\"hljs-keyword\">FROM</span>\n  users, json_each(data <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-string\">&#x27;favorites&#x27;</span>) f\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span>\n  f.value\n<span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span>\n  count <span class=\"hljs-keyword\">DESC</span>;\n</code></pre><p>This query finds the most favorited bands. We are using aggregation and something called a <a href=\"https://www.sqlite.org/vtab.html#tabfunc2\">table valued functions</a>. We&#39;re using it to make a virtual table of all of the values out of the JSON arrays and then summing those into a most commonly favorited bands.</p>\n<p>In general this isn&#39;t something too common to use table valued functions but here it is useful. Essentially it allows you to give a table to a function and that will generate a virtual table out of values (with usually more or less rows than what in the table).</p>\n<h2>Updating JSON</h2>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- this is how you update json</span>\n<span class=\"hljs-keyword\">UPDATE</span>\n  users\n<span class=\"hljs-keyword\">SET</span>\n  data <span class=\"hljs-operator\">=</span> json_insert(\n    (<span class=\"hljs-keyword\">SELECT</span> data <span class=\"hljs-keyword\">FROM</span> users <span class=\"hljs-keyword\">WHERE</span> email <span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&#x27;brian@example.com&#x27;</span>),\n    <span class=\"hljs-string\">&#x27;$.favorites[#]&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;The xx&#x27;</span>\n  )\n<span class=\"hljs-keyword\">WHERE</span>\n  email <span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&#x27;brian@example.com&#x27;</span>;\n</code></pre><p>Updating the JSON can be a bit more difficult. We need a copy of the JSON to update (hence the subquery) and then we need to use a JSON method to update it, and then to set the whole thing as the new value. Because there&#39;s no real JSON type and it&#39;s really just a string at the end of the day, we have to set it holistically each time.</p>\n<p>The <code>[#]</code> at the end of <code>&#39;$.favorites[#]&#39;</code> is a special syntax that means &quot;add to the end&quot;. You can put a number in there if you want to update a specific place.</p>\n","markdown":"```sql\n-- this is counting the most favorited bands\nSELECT\n  COUNT(f.value) AS count, f.value\nFROM\n  users, json_each(data ->> 'favorites') f\nGROUP BY\n  f.value\nORDER BY\n  count DESC;\n```\n\nThis query finds the most favorited bands. We are using aggregation and something called a [table valued functions][table-valued-function]. We're using it to make a virtual table of all of the values out of the JSON arrays and then summing those into a most commonly favorited bands.\n\nIn general this isn't something too common to use table valued functions but here it is useful. Essentially it allows you to give a table to a function and that will generate a virtual table out of values (with usually more or less rows than what in the table).\n\n## Updating JSON\n\n```sql\n-- this is how you update json\nUPDATE\n  users\nSET\n  data = json_insert(\n    (SELECT data FROM users WHERE email ='brian@example.com'),\n    '$.favorites[#]',\n    'The xx'\n  )\nWHERE\n  email ='brian@example.com';\n```\n\nUpdating the JSON can be a bit more difficult. We need a copy of the JSON to update (hence the subquery) and then we need to use a JSON method to update it, and then to set the whole thing as the new value. Because there's no real JSON type and it's really just a string at the end of the day, we have to set it holistically each time.\n\nThe `[#]` at the end of `'$.favorites[#]'` is a special syntax that means \"add to the end\". You can put a number in there if you want to update a specific place.\n\n[table-valued-function]: https://www.sqlite.org/vtab.html#tabfunc2\n","slug":"more-advance-queries","title":"More Advance Queries","section":"JSON","icon":"file-code","filePath":"/home/runner/work/complete-intro-to-sqlite/complete-intro-to-sqlite/lessons/08-json/D-more-advance-queries.md","nextSlug":"/lessons/scaling-sqlite/backups","prevSlug":"/lessons/json/jsonb"}},"__N_SSG":true}